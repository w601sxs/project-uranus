## Modified from git repo vpc setup on https://github.com/aws-containers/demo-app-for-docker-compose
## Author: ollypom(github)
## Editor: ruyyi0323@gmail.com

## Notes
# replace some of the attributes with shorthand version

AWSTemplateFormatVersion: "2010-09-09"
Description: Automated Data Engine Deploy Flow

Parameters:
  ProjectResourcePrefix:
    Description: Name of the not yet created Application CFN Stack
    Type: String
    Default: project-uranus
    AllowedPattern: (^[a-z][a-z0-9-]+$)
  DataEngineResourcePrefix:
    Description: Name of the not yet created Application CFN Stack
    Type: String
    Default: data-engine
    AllowedPattern: (^[a-z][a-z0-9-]+$)

Resources:

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"

  PipelineRoleDefaultPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: PipelineRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeStacks
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet 
            Effect: Allow
            Resource:
              - !Sub arn:aws:cloudformation:*:${AWS::AccountId}:stack/*
          - Action:
              - iam:PassRole
            Effect: Allow
            Resource:
              - '*'

  PipelineRoleDataEngineRelatedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: PipelineRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${DataEngineResourcePrefix}*
          - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
            Effect: Allow
            Resource:
              - !Sub arn:aws:codebuild:*:${AWS::AccountId}:project/${DataEngineResourcePrefix}*

  DataEngineImageBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"

  DataEngineImageBuildRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: DataEngineImageBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - "*"
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutObject*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${DataEngineResourcePrefix}*
          - Action:
              - ecr:GetAuthorizationToken
            Effect: Allow
            Resource:
              - "*"
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:CompleteLayerUpload
              - ecr:InitiateLayerUpload
              - ecr:PutImage
              - ecr:UploadLayerPart
            Effect: Allow
            Resource:
              - !Sub arn:aws:ecr:*:${AWS::AccountId}:repository/${DataEngineResourcePrefix}

  DataEngineExtractBuildRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Version: "2012-10-17"

  DataEngineExtractBuildRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: DataEngineExtractBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - "*"
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutObject*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${DataEngineResourcePrefix}*

  DataEngineDockerComposeRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - Ref: DataEngineExtractBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - cloudformation:*
              - ecs:ListAccountSettings
              - ecs:CreateCluster
              - ecs:CreateService
              - ecs:DeleteCluster
              - ecs:DeleteService
              - ecs:DeregisterTaskDefinition
              - ecs:DescribeClusters
              - ecs:DescribeServices
              - ecs:DescribeTasks
              - ecs:ListTasks
              - ecs:RegisterTaskDefinition
              - ecs:UpdateService
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:DescribeVpcs
              - ec2:DescribeVpcAttribute
              - ec2:DescribeSubnets
              - ec2:DescribeRouteTables
              - ec2:CreateSecurityGroup
              - ec2:CreateTags
              - ec2:DescribeSecurityGroups
              - ec2:DeleteSecurityGroup
              - ec2:RevokeSecurityGroupIngress
              - elasticfilesystem:CreateAccessPoint
              - elasticfilesystem:CreateFileSystem
              - elasticfilesystem:CreateMountTarget
              - elasticfilesystem:DeleteAccessPoint
              - elasticfilesystem:DeleteFileSystem
              - elasticfilesystem:DeleteMountTarget
              - elasticfilesystem:DescribeAccessPoints
              - elasticfilesystem:DescribeBackupPolicy
              - elasticfilesystem:DescribeFileSystemPolicy
              - elasticfilesystem:DescribeFileSystems
              - elasticfilesystem:DescribeLifecycleConfiguration
              - elasticfilesystem:DescribeMountTargets
              - elasticfilesystem:ModifyMountTarget
              - elasticfilesystem:ModifyMountTargetSecurityGroups
              - iam:AttachRolePolicy
              - iam:CreateRole
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:DetachRolePolicy
              - iam:PassRole
              - iam:PutRolePolicy
              - elasticloadbalancing:*
              - application-autoscaling:*
              - servicediscovery:*
              - logs:CreateLogGroup
              - logs:DescribeLogGroups
              - logs:FilterLogEvents
              - logs:DeleteLogGroup
              - route53:CreateHostedZone
              - route53:DeleteHostedZone
              - route53:GetHealthCheck
              - route53:GetHostedZone
              - route53:ListHostedZonesByName
            Effect: Allow
            Resource:
              - "*"
             
Outputs:
  PipelineRoleArn:
    Description: Project-level Pipeline Role ARN
    Value: !GetAtt PipelineRole.Arn
  DataEngineImageBuildRoleArn:
    Description: Data Engine Image Build Role ARN
    Value: !GetAtt DataEngineImageBuildRole.Arn
  DataEngineExtractBuildRoleArn:
    Description: Data Engine Extract Build Role ARN
    Value: !GetAtt DataEngineExtractBuildRole.Arn


